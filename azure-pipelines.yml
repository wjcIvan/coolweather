# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
variables:
  SECURE_ANALYZERS_PREFIX: https://192.168.202.4
  USERID: bfa4655a5c4849a4a197a116b4643b7a
  SCAP_API_IMAGE: $(SECURE_ANALYZERS_PREFIX)/secidea/myapis/putGitSvnProject

steps:
# - task: Gradle@2
#   inputs:
#     workingDirectory: ''
#     gradleWrapperFile: 'gradlew'
#     gradleOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/TEST-*.xml'
#     tasks: 'build'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "$(Build.Repository.Name)"
      echo "$(Environment.Name)"
      #echo "$(Build.Repository.Name)"
      echo "$(Build.SourceBranchName)"
      echo "$(Build.Repository.Uri)"
      #curl -k -X POST $(SECURE_ANALYZERS_PREFIX) -d "userId=$(USERID)&projectName=$CI_PROJECT_PATH&version=1&sourceUrl=$(Build.Repository.Uri)&branch=$(Build.SourceBranchName)&sourceType=1&sourceAccount=$GITLAB_USER_LOGIN"
      
# - task: InvokeRESTAPI@1
#   inputs:
#     connectionType: 'connectedServiceName'
#     method: 'POST'
#     waitForCompletion: 'false'
